import { useEffect, useRef } from "react";

function AnimatedGreeting({startAnimation}) {
  const pathRefs = useRef([]);

  const addRef = (el) => {
    if (el && !pathRefs.current.includes(el)) {
      pathRefs.current.push(el);
    }
  };

  useEffect(() => {
    if(startAnimation) {
    let totalDuration = 0;
    const durations = [300, 50, 50, 175, 50, 200, 100, 300, 250, 250, 350, 50];

    const addedDelays = [250, 50, 50, 350, 50, -50, 50, 0, 100];

    console.log(pathRefs);

    pathRefs.current.forEach((path, index) => {
      const length = path.getTotalLength();
      path.style.strokeDasharray = length;
      path.style.strokeDashoffset = length;

      const duration = durations[index] || 0;
      const addedDelay = addedDelays[index] || 0;
      const delay = totalDuration + addedDelay;
      totalDuration += duration;
      totalDuration += addedDelay;

      path.style.animation = `${
        "dash" + index
      } ${duration}ms linear ${delay}ms forwards`;

      const styleSheet = document.styleSheets[0];
      const keyframes = `
        @keyframes dash${index} {
          from {
            stroke-dashoffset: ${length};
          }
          to {
            stroke-dashoffset: 0;
          }
        }
      `;

      styleSheet.insertRule(keyframes, styleSheet.cssRules.length);
    });
    } 
  }, [startAnimation]);

  return (
    <div className="greeting-svg-container">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeMiterlimit="10"
        clipRule="evenodd"
        viewBox="0 0 900 600"
        stroke="#202020"
      >
        <g>
          <path
            ref={addRef}
            className="penstroke"
            fill="none"
            stroke="#202020"
            strokeWidth="11.393"
            d="M62.623 123.74c10.183-9.546 15.095-16.371 22.799-26.621 2.673-3.557 5.355-6.957 8-10.498.306-.411 2.833-4.093 3.599-3.375.948.888 0 7.007 0 7.874 0 6.032.833 12.004 1.6 17.997 3.673 28.693 5.135 55.359-2.4 83.612-1.135 4.257-6.06 26.352-13.599 23.996-5.856-1.83-4.8-18.952-4.8-23.246 0-12.728 9.26-29.399 19.199-37.869 9.22-7.857 20.029-14.161 27.598-23.621 5.115-6.393 11.647-15.154 13.999-22.872.782-2.565 2-5.907 2-8.624v-3-.749c0 10.946-4.528 21.598-6.799 32.245-3.255 15.254-6.4 30.507-6.4 46.118 0 10.206 3.302 23.441 13.599 28.87 6.695 3.531 12.916-.312 17.999-4.124 12.163-9.121 21.767-21.792 29.198-34.495 3.09-5.282 5.538-10.758 8.4-16.122.087-.163 2.006-3.75 1.199-3.75-.686 0-.4 4.627-.4 4.875 0 5.164-.603 10.222-.799 15.372-.56 14.698 6.187 30.746 24.398 30.746 3.757 0 8.116-1.095 10.799-3.75 3.456-3.419 4.426-5.29 6.8-8.998"
          ></path>
          <path
            ref={addRef}
            className="penstroke"
            fill="none"
            stroke="#202020"
            strokeWidth="14.252"
            d="M201.14 111.567c-1.332.665-.598.254-2.165 1.298"
          ></path>
          <path
            ref={addRef}
            className="penstroke last-comma"
            fill="none"
            stroke="#202020"
            strokeWidth="11.17"
            d="M272.767 185.688c.33.33.936.525.988.988.729 6.453.879 12.958 1.318 19.437"
          ></path>
          <path
            ref={addRef}
            className="penstroke"
            fill="none"
            stroke="#202020"
            strokeWidth="11.62"
            d="M49.203 355.998c12.786-3.836 21.518-12.05 30.737-20.347.512-.461.866 6.013.866 6.061 0 3.856.29 7.813.433 11.688.369 9.961 1.447 19.905 1.731 29.872.761 26.635 2.123 52.207-7.36 77.492-1.712 4.566-2.788 12.842-7.359 15.585-2.888 1.732-5.126-4.169-5.628-5.628-2.81-8.174-3.675-10.785-3.463-19.048.41-15.959 10.05-24.866 21.213-34.634"
          ></path>
          <g>
            <path
              ref={addRef}
              className="penstroke"
              fill="none"
              stroke="#202020"
              strokeWidth="10.729"
              d="M115.006 328.291c.433.578 1.253 1.012 1.299 1.732.54 8.498.289 17.028.433 25.542"
            ></path>
          </g>
          <path
            ref={addRef}
            className="penstroke"
            fill="none"
            stroke="#202020"
            strokeWidth="11.17"
            d="M113.275 410.978c.432 0 .973.287 1.298 0a314.444 314.444 0 0016.884-16.018c1.232-1.258 1.871-3.003 3.03-4.329.666-.76.245 2.051 0 3.031-.383 1.532-.986 3.2-1.298 4.762-.994 4.967-1.513 10.12-1.732 15.152-.428 9.849-3.451 19.212-3.896 29.005-.039.843.278 17.317-.433 17.317-.794 0-.433-6.06-.433-6.061 1.292-5.813 4.421-12.483 6.494-18.182 3.179-8.745 11.761-36.798 22.511-36.798 3.616 0 5.156 6.612 5.628 9.091 1.904 9.992 1.108 20.872-.866 30.737-.791 3.956-1.731 7.617-1.731 11.689 0 1.307-.116 5.164-.433 3.896-1.169-4.677 2.775-12.959 3.896-16.884 3.215-11.253 11.855-34.286 26.408-35.499 3.691-.307 3.03 9.065 3.03 11.689 0 9.779.35 19.661 0 29.438-.048 1.358-2.224 14.84 0 10.39"
          ></path>
          <path
            ref={addRef}
            className="penstroke"
            fill="none"
            stroke="#202020"
            strokeWidth="11.17"
            d="M253.107 333.089c7.564 7.565 12.452 16.147 21.645 22.512 11.918 8.251 31.626 14.717 46.323 12.988 6.425-.756 14.544-1.205 20.347-4.33 8.485-4.569 21.244-15.979 12.554-26.407-6.364-7.638-14.825-10.037-23.63-9.485-11.439.717-23.459 6.416-32.216 12.082-30.852 19.963-44.299 57.861-34.2 92.644 2.111 7.275 12.577 24.476 20.347 26.841 5.692 1.732 11.442 3.382 17.316 4.329 14.261 2.3 42.171-19.188 55.855-22.736"
          ></path>
          <path
            ref={addRef}
            className="penstroke"
            fill="none"
            stroke="#202020"
            strokeWidth="11.17"
            d="M397.363 408.122c-3.04-3.04-8.6-.784-12.888-.478-5.041.361-9.031 4.56-13.365 7.16-9.016 5.41-19.678 30.081-9.546 38.187 15.142 12.113 31.434-8.521 35.322-21.48 1.542-5.14 3.063-10.466 3.818-15.752.36-2.52 0-7.637 0-7.637s-.254 1.606-.477 2.386c-.983 3.44-1.044 7.011-1.432 10.502-.91 8.195-3.376 26.447 7.637 29.594 6.205 1.773 13.381-4.793 16.707-9.069 6.377-8.2 17.175-36.994 29.117-35.8 6.012.601 7.306 8.781 9.069 13.365 4.227 10.991 1.055 25.037-5.251 34.845-5.393 8.389-13.607 11.919-16.706-.477"
          ></path>
          <path
            ref={addRef}
            className="penstroke"
            fill="none"
            stroke="#202020"
            strokeWidth="10.893"
            d="M500.732 338.873c11.504 5.752 20.212 12.996 31.955 18.777 16.711 8.227 36.425 2.906 50.402-7.577 5.754-4.315 11.181-10.991 9.883-18.777-3.147-18.882-28.146-1.296-34.26 5.929-9.897 11.696-11.332 24.131-15.813 38.214-4.184 13.15-10.356 25.919-15.154 38.873-3.687 9.956-7.568 19.914-12.518 29.319-1.854 3.522-3.833 7.187-5.93 10.542-.65 1.041-.779 4.162-1.647 3.294-.973-.973 5.269-8.233 5.271-8.236 5.786-7.233 12.839-18.446 22.731-20.424 11.268-2.254 16.197 10.147 25.036 14.165 6.942 3.156 14.288 5.72 22.072 4.942 12.674-1.268 31.813-19.858 34.919-32.284.359-1.433-1.044 2.747-1.317 3.294-1.1 2.2-1.925 4.204-3.295 6.259-3.008 4.513-7.758 20.896 1.647 22.072 8.382 1.047 12.789-6.983 16.824-13.521"
          ></path>
          <path
            ref={addRef}
            className="penstroke"
            fill="none"
            stroke="#202020"
            strokeWidth="11.17"
            d="M632.504 433.089c4.361-4.361 8.807-13.471 12.189-19.107.753-1.256 1.842-4.806 2.635-5.6.935-.935.493 2.641.329 3.953-.27 2.164-.413 4.382-.658 6.589-.642 5.773-.989 12.401-.989 18.118 0 2.159-.329 4.344-.329 6.589v1.318s.662-3.798 1.318-5.601a295.74 295.74 0 002.635-7.576c2.821-8.464 11.176-20.805 20.754-22.402 3.44-.573 5.34 4.334 4.612 7.248-.926 3.703-2.34 7.779-2.965 11.53-1.581 9.489 2.171 23.346 13.836 12.848 2.084-1.876 3.331-3.783 4.942-5.93"
          ></path>
          <path
            ref={addRef}
            className="penstroke"
            fill="none"
            stroke="#202020"
            strokeWidth="11.17"
            d="M723.426 414.641c0-2.904-9.483-1.102-12.189-.329-9.871 2.82-24.408 19.602-12.189 28.331 5.526 3.946 14.828.214 18.448-4.612 7.615-10.153 12.712-20.598 14.825-33.273.711-4.267 1.77-8.563 2.306-12.847.231-1.853 0-5.601 0-5.601s-.162 2.861-.33 4.283c-.421 3.576-.988 7.27-.988 10.871 0 10.344-.793 20.206.329 30.308.274 2.462 2.873 7.524 5.93 7.906 9.552 1.194 17.586-5.499 25.696-9.554 2.425-1.212 7.065-1.844 8.894-4.282 2.817-3.756 5.181-14.727.659-18.119-4.866-3.649-11.283 1.772-13.836 5.601-5.464 8.196-6.118 27.436 6.589 29.978 3.181.636 7.923-1.52 10.871-2.306 12.595-3.359 17.716-10.006 25.036-19.766 1.852-2.469 9.303-14.495 11.53-14.495 2.648 0-.325 16.769-.659 19.107-.638 4.471-.329 9.657-.329 14.165 0 .668.339 1.977-.329 1.977s-.44-1.318-.33-1.977c.635-3.811 1.564-8.108 2.636-11.859 2.465-8.628 3.251-15.462 11.859-19.766 1.35-.675 3.719-1.505 5.271-.988 10.705 3.568-9.651 46.734 13.507 31.296 3.091-2.062 6.218-4.074 9.224-6.26"
          ></path>
          <path
            ref={addRef}
            className="penstroke last-comma"
            fill="none"
            stroke="#202020"
            strokeWidth="11.17"
            d="M272.767 185.688c.33.33.936.525.988.988.729 6.453.879 12.958 1.318 19.437"
          ></path>
          <path
            ref={addRef}
            className="penstroke"
            fill="none"
            stroke="#202020"
            strokeWidth="10.893"
            d="M627.892 389.605l-.33 1.317"
          ></path>
        </g>
      </svg>
    </div>
  );
}

export default AnimatedGreeting;
